import collections
import glob
from nltk import ngrams
from malwareEncoder import MalwareEncoder
from malware import Malware
from gram import Gram
from ngram import Ngram
import os.path


malw = Malware("bla", [Ngram(2, [Gram(["00", "CC"],123, 0.1,0.01)])], )

n = 4

#MalwareEncoder.encode(malw)

allfiles = (glob.glob('D:/GIT/**/*.bytes',recursive=True))

def DetectAndWriteMalware(gramsI):
  #Ngram: contains n for the length of the first tupel and gramps for the value. Ngram (n, List[Gram])
  #Example: object = new Ngram (2, (('CC', 'CC'), 218684)
  #         (('00', '00'), 29667)
  #         (('??', '??'), 10793) )
  #Gram: (('CC', 'CC'), 218684) + probability
  #all n-grams 
  ngram = Ngram(None, None)
  for x in allfiles:
    fileName = x.split('.')[0] + '.json'
    if not os.path.isfile(fileName):
      file = open(fileName, "x") 
   
    for p in range(2,(gramsI+1)): # geh von 1 bis 6(gramsI) durch
      ngram.n = p
      f = open(x,"r")
      grams = ngrams(f.read().split(), p)
      gramsCounter = collections.Counter(grams) # das erzeugt  (('00', '00'), 29667)
      
      filterList = list(filter(lambda x : len(x[0][0]) !=8 or x[1] != 1, gramsCounter.most_common()))
      # for gramsi in gramsCounter:
      #   if len(gramsi[0][0]) != 8 or gramsi[1] != 1:
      #     filterListNew.append(gramsi)
      grams2 = [Gram(x[0], x[1], None, None) for x in filterList]
      ngram.grams = grams2
      #calculate sum of all grams in the whole file
      summe = sum([y[1] for y in filterList])

      #calculate the Probabilty of each gram
      listOfProbability = [x[1]/summe for x in filterList]
      for i in range(len(ngram.grams)):
        ngram.grams[i].probability = listOfProbability[i]
      print(ngram.grams[0])
      malware = Malware('Malware_' + str(p), ngram, None)
      file = open(fileName, "w")
      malwarEncoder = MalwareEncoder()
      file.write(malwarEncoder.encode(malware)) 
      file.close() 
    # for grams in gramsCounter.most_common():
    #   if len(grams[0][0]) < 8 or grams[1] != 1:
    #     a.append(grams[-1])
    #     print(grams)
    #     summ = sum(a)
    # for c in a:
    #     perc = c/summ * 100
    #     percent.append(perc)  
       
DetectAndWriteMalware(4)