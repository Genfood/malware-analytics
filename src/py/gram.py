from typing import List

class Gram:
        
    def __init__ (self, tokens: List[str], count: int, probability: float, probabilityWithoutMostCommon: float, memoryAddresses: List[int] = None):
        self.tokens = tokens # The array of the n tokens, basically this specific n-gram, thats why the sequence of the tokens is important.
        self.count = count # The count of how often the array of tokens occured in the whole file.
        self.probability = probability # the probability that this sequence will occure if you pick a random position in the file.
        self.probabilityWithoutMostCommon = probabilityWithoutMostCommon # some token sequences are not that useful so called stopwords, this sequences should maybe be ignored. (f.e.: '00 00 00' or '?? ?? ??') Also the occurence of this sequences are far over the averrage.
        self.memoryAddresses = memoryAddresses # a list of memory addresses. One address  represent a occurence of the specifc token sequence. Also: len(memoryAddresses) == count